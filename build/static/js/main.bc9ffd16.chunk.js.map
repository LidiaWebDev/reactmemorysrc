{"version":3,"sources":["dogs.js","components/navbar/navbar.js","components/banner/banner.js","components/imageDiv/imageDiv.js","components/images/images.js","components/footer/footer.js","App.js","index.js"],"names":["dogs","Navbar","props","react_default","a","createElement","className","href","id","gameStatus","feedback","score","topScore","Banner","ImageBlock","src","process","imageFileName","alt","height","imageBlockHeight","width","imageBlockWidth","onClick","clickHandler","ImageBlockListing","imageFileNames","map","index","imageDiv_imageDiv","key","Footer","target","rel","App","state","ImageFileNames","clickedImages","handleClick","event","clickedImageFileName","_this","imageClickedBefore","setState","shuffle","newScore","length","clickedImagesCopy","slice","push","newTopScore","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","this","console","log","navbar_navbar","banner_banner","components_images_images","footer_footer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.bc9ffd16.chunk.js","sourcesContent":["let dogs = [\n  \"dog1.png\",\n  \"dog2.png\",\n  \"dog3.png\",\n  \"dog4.png\",\n  \"dog5.png\",\n  \"dog6.png\",\n  \"dog7.png\",\n  \"dog8.png\",\n  \"dog9.png\",\n  \"dog10.png\",\n  \"dog11.png\",\n  \"dog12.png\"\n];\n\nexport default dogs;\n","import React from \"react\";\nimport \"./navbar.css\";\n\nconst Navbar = props => (\n  <div className=\"bg-dark navbar-dark container-fluid text-center pt-1 pb-1\">\n    <div className=\"row\">\n      <div className=\"col-md-4\">\n        <h2>\n          <a href=\".\" className=\"text-white nounderline\" id=\"app-name\">\n            Clicky Game\n          </a>\n        </h2>\n      </div>\n      <div\n        className={\n          \"col-md-4 \" +\n          (props.gameStatus == \"2\"\n            ? \" text-danger\"\n            : props.gameStatus == \"1\"\n            ? \" text-success\"\n            : \" text-info\")\n        }\n      >\n        <h3>{props.feedback}</h3>\n      </div>\n      <div className=\"col-md-4 text-muted\">\n        <h3>\n          Score: {props.score} | Top Score: {props.topScore}\n        </h3>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./banner.css\";\n\nconst Banner = () => (\n  <div className=\"jumbotron jumbotron-fluid text-center\">\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-8 offset-md-2 offset-md-right-2\">\n          <h1>The World of Dogs (Viber stickers)</h1>\n          <h1>Clicky Game</h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\nexport default Banner;\n","import React from \"react\";\nimport \"./imageDiv.css\";\n\nconst ImageBlock = props => (\n  <img\n    className={\n      \"col-md-3 col-sm-4 col-xs-12 pb-3 pt-3 imageBlock square-sm \" +\n      (props.gameStatus == \"2\"\n        ? \" gameLost\"\n        : props.gameStatus == \"1\"\n        ? \" gameWon\"\n        : \"\")\n    }\n    src={process.env.PUBLIC_URL + \"/images/\" + props.imageFileName}\n    alt={props.alt}\n    height={props.imageBlockHeight}\n    width={props.imageBlockWidth}\n    onClick={props.clickHandler}\n  />\n);\n\nexport default ImageBlock;\n","import React from \"react\";\nimport \"./images.css\";\nimport ImageBlock from \"../imageDiv\";\n\nconst ImageBlockListing = props => (\n  <div className=\"container\">\n    <div className=\"row\">\n      {props.imageFileNames.map((imageFileName, index) => {\n        return (\n          <ImageBlock\n            key={index}\n            imageFileName={imageFileName}\n            alt={imageFileName}\n            clickHandler={props.clickHandler}\n            gameStatus={props.gameStatus}\n          />\n        );\n      })}\n    </div>\n  </div>\n);\n\nexport default ImageBlockListing;\n","import React from \"react\";\nimport \"./footer.css\";\n\nconst Footer = () => (\n  <footer className=\"footer text-center\">\n    <span>\n      Clicky Game Â© 2019 Copyright:&nbsp;\n      <a\n        href=\"https://github.com/LidiaWebDev\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        LidiaWebDev\n      </a>\n    </span>\n  </footer>\n);\n\nexport default Footer;\n","// imports\nimport React, { Component } from \"react\";\nimport ImageFileNames from \"./dogs\";\nimport Navbar from \"./components/navbar\";\nimport Banner from \"./components/banner\";\nimport ImageBlockListing from \"./components/images\";\nimport Footer from \"./components/footer\";\n// component - state\nclass App extends Component {\n  state = {\n    imageFileNames: ImageFileNames,\n    clickedImages: [],\n    score: 0,\n    topScore: 0,\n    feedback: \"Click an image to begin!\",\n    gameStatus: 0 //gameStatus: 0 => game in progresss, 1 => game won, 2 => game lost\n  };\n  // componentDidMount\n  componentDidMount() {\n    this.setState(\n      {\n        imageFileNames: this.shuffle(this.state.imageFileNames)\n      },\n      () => {\n        console.log(\"Shuffled the images on game start\");\n      }\n    );\n  }\n  // handleClick\n\n  handleClick = event => {\n    const clickedImageFileName = event.target.alt;\n\n    const wasImageClickedBefore = this.imageClickedBefore(clickedImageFileName);\n    if (wasImageClickedBefore) {\n      this.setState(\n        {\n          imageFileNames: this.shuffle(this.state.imageFileNames),\n\n          clickedImages: [],\n          score: 0,\n          feedback: \"Game Over! You clicked this image twice\",\n          gameStatus: 2\n        },\n        () => {}\n      );\n    } else {\n      let newScore = this.state.score + 1;\n      if (newScore === this.state.imageFileNames.length) {\n        this.setState({\n          imageFileNames: this.shuffle(this.state.imageFileNames),\n\n          clickedImages: [],\n          score: 0,\n          topScore: newScore,\n          feedback: \"CONGRATULATIONS! YOU WON!!!\",\n          gameStatus: 1\n        });\n      } else {\n        const clickedImagesCopy = this.state.clickedImages.slice();\n        clickedImagesCopy.push(clickedImageFileName);\n        const newTopScore =\n          newScore > this.state.topScore ? newScore : this.state.topScore;\n        this.setState(\n          {\n            imageFileNames: this.shuffle(this.state.imageFileNames),\n\n            clickedImages: clickedImagesCopy,\n            score: newScore,\n            topScore: newTopScore,\n            feedback: \"You are doing great! all correct!\",\n            gameStatus: 0\n          },\n          () => {}\n        );\n      }\n    }\n  };\n\n  imageClickedBefore = clickedImageFileName => {\n    for (let index = 0; index < this.state.clickedImages.length; index++) {\n      if (this.state.clickedImages[index] === clickedImageFileName) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  shuffle = array => {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar\n          score={this.state.score}\n          topScore={this.state.topScore}\n          feedback={this.state.feedback}\n          gameStatus={this.state.gameStatus}\n        />\n        <Banner />\n        <ImageBlockListing\n          imageFileNames={this.state.imageFileNames}\n          clickHandler={this.handleClick}\n          gameStatus={this.state.gameStatus}\n        />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}